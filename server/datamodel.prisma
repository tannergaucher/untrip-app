type User {
  id: ID! @id
  email: String! @unique
  password: String!
  isEmailSubscriber: Boolean @default(value: false)
  lists: [List!] @relation(name: "UserOnList" onDelete: CASCADE) 
}

type List {
  id: ID! @id 
  title: String!
  places: [ListPlace!] @relation(name: "ListOnPlace" onDelete: CASCADE)
  user: User! @relation(name: "UserOnList")
}

type ListPlace {
  id: ID! @id
  sanityId: String 
  name: String
  imageUrl: String
  slug: String
  lat: Float
  lng: Float
  list: List @relation(name: "ListOnPlace")
}

type EmailSubscriber {
  id: ID! @id 
  email: String! @unique
}

type Comment {
  id: ID! @id
  text: String!
  sanityPostId: String!
  author: User!
  claps: Int @default(value: 0)
}
